{"version":3,"sources":["logo.svg","pages/edit.js","components/noteCard.js","components/newNoteCard.js","pages/list.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Edit","props","history","useHistory","id","useParams","data","JSON","parse","localStorage","getItem","useState","title","setTitle","content","setContent","theme","useTheme","useStyles","makeStyles","arrowBack","color","palette","text","primary","deleteButton","error","main","contentInput","backgroundColor","background","paper","borderRadius","width","padding","withStyles","root","white","borderColor","TextField","TitleTextField","classes","Container","Grid","container","spacing","item","xs","Box","display","flexDirection","IconButton","onClick","goBack","ArrowBackIos","className","ids","filter","v","setItem","stringify","removeItem","DeleteOutline","label","variant","value","onChange","e","target","Paper","InputBase","placeholder","inputProps","multiline","rows","rowsMax","height","alignItems","textAlign","paddingLeft","GreenCheckbox","grey","green","checked","Checkbox","stopPropagation","NoteCard","undefined","completed","isChecked","setChecked","c","push","checkbox","update","textOverflow","overflow","NewNoteCard","lastId","noteIds","newId","marginTop","List","setDummyState","justifyContent","style","fontSize","Typography","reverse","noteCards","forEach","key","loadNotes","createMuiTheme","default","common","black","typography","fontFamily","join","App","ThemeProvider","CssBaseline","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6c4e698d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react'\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom'\r\nimport { Container, Grid, Box, IconButton, Icon, makeStyles, useTheme, TextField, withStyles, InputBase, Paper } from '@material-ui/core'\r\n\r\nimport {\r\n  red,\r\n} from '@material-ui/core/colors'\r\n\r\nimport {\r\n  ArrowBackIos,\r\n  DeleteOutline,\r\n  FilterNone\r\n} from '@material-ui/icons'\r\n\r\nexport default function Edit(props) {\r\n  const history = useHistory()\r\n\r\n  const id = useParams().id\r\n  let data = JSON.parse(localStorage.getItem(`note-${id}`))\r\n\r\n  const [title, setTitle] = useState(data.title)\r\n  const [content, setContent] = useState(data.content)\r\n\r\n  const theme = useTheme()\r\n\r\n  const useStyles = makeStyles({\r\n    arrowBack: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    deleteButton: {\r\n      color: theme.palette.error.main,\r\n    },\r\n    contentInput: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: 20,\r\n      width: '100%',\r\n      padding: 8,\r\n    }\r\n  })\r\n\r\n  const [TitleTextField,] = useState(withStyles({\r\n    root: {\r\n      width: '100%',\r\n      '& label.Mui-focused': {\r\n        color: theme.palette.background.paper,\r\n      },\r\n      '& label': {\r\n        color: theme.palette.background.paper,\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          color: theme.palette.background.white,\r\n          borderColor: theme.palette.background.paper,\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          color: theme.palette.background.paper,\r\n          borderColor: theme.palette.background.paper,\r\n        },\r\n      },\r\n    }\r\n  })(TextField))\r\n\r\n  const handleTitleChange = (e) => {\r\n    data.title = e.target.value\r\n    localStorage.setItem(`note-${id}`, JSON.stringify(data))\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const handleContentChange = (e) => {\r\n    data.content = e.target.value\r\n    localStorage.setItem(`note-${id}`, JSON.stringify(data))\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  const deleteNote = () => {\r\n    let ids = JSON.parse(localStorage.getItem('note-ids'))\r\n    ids = ids.filter((v) => v !== id)\r\n\r\n    localStorage.setItem('note-ids', JSON.stringify(ids))\r\n    localStorage.removeItem(`note-${id}`)\r\n\r\n    history.goBack()\r\n  }\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Box display=\"flex\" flexDirection=\"row\">\r\n            <IconButton onClick={() => history.goBack()}>\r\n              <ArrowBackIos className={classes.arrowBack} />\r\n            </IconButton>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n            <IconButton onClick={deleteNote}>\r\n              <DeleteOutline className={classes.deleteButton} />\r\n            </IconButton>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TitleTextField id={`title-${id}`} label=\"Title\" variant=\"outlined\" value={title} onChange={handleTitleChange} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.contentInput}>\r\n            <InputBase\r\n              className={classes.contentInput}\r\n              value={content}\r\n              onChange={handleContentChange}\r\n\r\n              placeholder=\"Write something...\"\r\n              inputProps={{ 'aria-label': 'naked' }}\r\n              multiline\r\n              rows={15}\r\n              rowsMax={15}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Paper, makeStyles, Grid, Checkbox, withStyles, FormLabel, Typography, Box } from '@material-ui/core'\r\n\r\nimport green from '@material-ui/core/colors/green'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\nimport {\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 48,\r\n  },\r\n  content: {\r\n    height: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    textAlign: 'left',\r\n    paddingLeft: 4,\r\n  }\r\n})\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: grey[800],\r\n    '&$checked': {\r\n      color: green[500],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox onClick={(e) => { e.stopPropagation() }} color=\"default\" {...props} />);\r\n\r\nexport default function NoteCard(props) {\r\n  const classes = useStyles()\r\n  const title = props.title === undefined ? 'untitled' : props.title\r\n  const id = props.id\r\n\r\n  const [isChecked, setChecked] = useState(props.completed)\r\n  const c = isChecked\r\n\r\n  const history = useHistory()\r\n\r\n  const openEditPage = () => {\r\n    history.push(`/edit/${id}`)\r\n  }\r\n\r\n  const toggleNoteStatus = (e) => {\r\n    e.stopPropagation()\r\n    let data = JSON.parse(localStorage.getItem(`note-${id}`))\r\n    data.completed = !isChecked\r\n    localStorage.setItem(`note-${id}`, JSON.stringify(data))\r\n    setChecked(!isChecked)\r\n    props.update(`${id},${!isChecked}`)\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper className={classes.root} onClick={openEditPage}>\r\n        <Grid className={classes.content} container spacing={1}>\r\n          <Grid item xs={1}>\r\n            <GreenCheckbox className={classes.checkbox} checked={c} onClick={toggleNoteStatus} />\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <Box className={classes.text} textOverflow=\"ellipsis\" overflow=\"hidden\">\r\n              {title}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport { Paper, makeStyles, Grid, Checkbox, withStyles, FormLabel, Typography, Box } from '@material-ui/core'\r\n\r\nimport green from '@material-ui/core/colors/green'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\nimport {\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 48,\r\n  },\r\n  content: {\r\n    height: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    textAlign: 'left',\r\n  }\r\n})\r\n\r\nexport default function NewNoteCard() {\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n\r\n  const createNewNote = (e) => {\r\n    let lastId = JSON.parse(localStorage.getItem('last-id'))\r\n    if (lastId === null) {\r\n      lastId = -1\r\n    }\r\n    let noteIds = JSON.parse(localStorage.getItem('note-ids'))\r\n    if (noteIds === null) {\r\n      noteIds = []\r\n    }\r\n\r\n    const newId = lastId + 1\r\n    noteIds.push(newId)\r\n\r\n    localStorage.setItem('last-id', JSON.stringify(newId))\r\n    localStorage.setItem('note-ids', JSON.stringify(noteIds))\r\n\r\n    localStorage.setItem(`note-${newId}`, JSON.stringify({\r\n      title: '',\r\n      content: '',\r\n      completed: false,\r\n    }))\r\n    \r\n    history.push(`/edit/${newId}`)\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper className={classes.root} onClick={createNewNote}>\r\n        <Grid className={classes.content} container>\r\n          <Grid item xs={1}>\r\n            +\r\n        </Grid>\r\n          <Grid item xs={10}>\r\n            <Box className={classes.text} textOverflow=\"ellipsis\" overflow=\"hidden\">\r\n              Create new note\r\n          </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Container, Grid, Box, Typography, makeStyles } from '@material-ui/core'\r\nimport green from '@material-ui/core/colors/green'\r\nimport Done from '@material-ui/icons/Done'\r\n\r\nimport NoteCard from '../components/noteCard'\r\nimport NewNoteCard from '../components/newNoteCard'\r\n\r\nfunction loadNotes(update) {\r\n  const ids = JSON.parse(localStorage.getItem('note-ids')).reverse()\r\n  if (ids === null) return\r\n  const noteCards = []\r\n\r\n  ids.forEach((id) => {\r\n    const data = JSON.parse(localStorage.getItem(`note-${id}`))\r\n    if (data.completed) {\r\n      return\r\n    }\r\n    noteCards.push(\r\n      <NoteCard id={id} title={data.title} completed={data.completed} update={update} key={id} />\r\n    )\r\n  })\r\n  ids.forEach((id) => {\r\n    const data = JSON.parse(localStorage.getItem(`note-${id}`))\r\n    if (!data.completed) {\r\n      return\r\n    }\r\n    noteCards.push(\r\n      <NoteCard id={id} title={data.title} completed={data.completed} update={update} key={id} />\r\n    )\r\n  })\r\n  return noteCards\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    marginTop: '5vh',\r\n  }\r\n})\r\n\r\nexport default function List(props) {\r\n  const classes = useStyles()\r\n\r\n  const [, setDummyState] = useState('.')\r\n\r\n  return (\r\n    <div>\r\n      <Container className={classes.content}>\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <Done style={{\r\n            fontSize: 100,\r\n            color: green[400],\r\n          }} />\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <Typography variant=\"h3\">To Do List</Typography>\r\n        </Box>\r\n        <Grid className={classes.content} container spacing={1}>\r\n          <NewNoteCard />\r\n          {loadNotes(setDummyState)}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react';\nimport logo from './logo.svg';\n\nimport { ThemeProvider, createMuiTheme, CssBaseline, Card, CardContent } from '@material-ui/core'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  HashRouter,\n  Link\n} from 'react-router-dom'\n\nimport './App.css'\nimport Edit from './pages/edit'\nimport List from './pages/list'\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      paper: '#222',\n      default: '#000',\n    },\n    text: {\n      primary: '#fff',\n    },\n    common: {\n      black: \"#fff\",\n      white: \"#000\",\n    }\n  },\n  typography: {\n    fontFamily: [\n      'Varela Round',\n      'sans-serif'\n    ].join(',')\n  }\n})\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <HashRouter basename='/'>\n          <Route exact path=\"/\" render={(props) => <List {...props} key={1} />}>\n          </Route>\n          <Route exact path=\"/edit/:id\" render={(props) => <Edit {...props} key={2} />}>\n          </Route>\n        </HashRouter>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}